name: List Available macOS Releases

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 2"

jobs:
  update-versions:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v4
      
      - name: Get macOS Versions
        id: versions
        run: |
          # Get versions and format as markdown table
          echo "VERSIONS_TABLE<<EOF" >> $GITHUB_ENV
          echo "| macOS Version | Build Number | Release Date |" >> $GITHUB_ENV
          echo "|--------------|--------------|--------------|" >> $GITHUB_ENV
          softwareupdate --list-full-installers | grep -E "macOS.*" | while read -r line; do
            version=$(echo "$line" | cut -d' ' -f2-)
            echo "| $version | $(date +%Y-%m-%d) |" >> $GITHUB_ENV
          done
          echo "EOF" >> $GITHUB_ENV

      - name: Update README
        run: |
          # Replace content between markers
          sed -i '' '/<!-- BEGIN MACOS VERSIONS -->/,/<!-- END MACOS VERSIONS -->/c\
          <!-- BEGIN MACOS VERSIONS -->\
          ${{ env.VERSIONS_TABLE }}\
          <!-- END MACOS VERSIONS -->' README.md

      - name: Commit Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update macOS versions table" || exit 0
          git push

  re-run-failed-jobs:
    runs-on: ubuntu-latest
    needs: [update-versions]
    if: always() && (needs.update-versions.result == 'failure')
    steps:
      - name: Needs Context
        env:
          NEEDS_CONTEXT: ${{ toJSON(needs) }}
        run: echo "$NEEDS_CONTEXT"
